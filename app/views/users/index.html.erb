<% content_for :title, title('Contacts')%>
<% content_for :javascripts, javascript_include_tag('jquery','users')%>

<% content_for :breadcrumbs, breadcrumbs %>
<% content_for :subheader_title do %>
	<%=link_to 'Contacts', users_path %>
	<span class="title-small">
		<% state_default = !@states_filter || @states_filter == 'active' %>
		<% if !@search && !@groups_filter %>
			showing <%= @users.size == 1 ? '':'all' %> <%= pluralize(@users.size, "#{@states_filter if !state_default} contact") %>
		<% else %>
			showing <%= pluralize(@users.size,"#{state_default ? 'filtered' : @states_filter} contact") %>
		<% end %>
	</span>
<% end %>
<% content_for :buttons do %>
	<% if @current_user.can?(:create => User) %>
		<%= link_to 'Bulk add contacts', new_bulk_users_path, :class => 'button-link' %>
	<% end %>
	<%= link_to 'Download these contacts', vcards_path('contacts', :users =>(@users.map {|u|u.id}).join(',')), :class => 'button-link' %>
    <%= mail_to (@users.map {|u| u.email}).join(';'), 'Email these contacts', :class => 'button-link', :target => '_blank' %>
<% end %>

<% content_for :filters do %>
	<%
		groups = @instance.groups.find(:all, :order => 'name').reject {|g| g.memberships.length == 0 }
		group_types = groups.collect {|g| g.group_type}.uniq
		states_options = options_for_select([['Active', 'active'], ['Pending','pending'], ['Approved', 'approved']], @states_filter)
	%>

	<% form_tag users_path, :method => :get do %>
		<%= text_field_tag :search, (params[:search] || 'Search Keywords'), :size => 20, :class=>(!params[:search] || params[:search] == '' ? 'blank':'') %>
		<select name="groups_filter">
			<option value="" <%= 'selected="selected"' if @groups_filter == "" %>>All Groups</option>
			<option value="mine" <%= 'selected="selected"' if @groups_filter == "mine" %> <%= 'style="display: none"' if @current_user.groups.size == 0 %>>My Groups</option>
			<%= option_groups_from_collection_for_select(group_types,:groups,'name.pluralize',:id,:name,@groups_filter) %>
		</select>
		<%= select_tag(:states_filter, states_options, :id => 'filters_states') if @states_filter %>
		<%= submit_tag "Apply Filters", :name => nil, :id => 'filters_submit' %>
	<% end %>
<% end %>


<% content_for :body do %>

	<div id="index">
		<h4>Jump to last name:</h4>
		<%  letters = []
			@users.each {|u| l=u.last_name[0,1].upcase; letters << l unless letters.include? l}
		%>
		<ul>
			<% ('A'..'Z').each do |l| %>
				<li>
					<% if letters.include?(l) %>
						<a href="#<%=l%>"><%=l%></a>
					<% else %>
						<span><%=l%></span>
					<% end %>
				</li>
			<% end %>
		</ul>
	</div>

	<% if @users.size == 0 %>
		<h3 class="centered">
			<% if @states_filter == 'pending' %>
				<%= t('warning.user.no_pending_search_results') %>
			<% else %>
				<%= t('warning.user.no_search_results') %>
			<% end %>
		</h3>
	<% end %>
	<ul id="contacts">
	<% 	last = ''
		@users.each do |u|
			if u.last_name[0,1].upcase != last
				last = u.last_name[0,1].upcase
			%>
				<li class="separator" id="<%=last%>"><%=last%></li>
			<% end %>
		<li>
			<div class="name">
				<%= link_to u.last_first, u %>
				<%= link_to "Download Contact", user_path(u, :format => :vcf), :class => 'vcard' %>
			</div>
			<div class="person-info">
				<% if u.cell_phone? %>
					<span class="phone">
						<span class="contact-label">cell phone: </span> <%=phone u.cell_phone -%> <%= preferred if u.preferred_is_cell? and u.desk_phone? -%> </span>
				<% end %>
				<% if u.desk_phone? %>
					<span class="phone">
						<span class="contact-label">desk phone:</span>
						<%=phone u.desk_phone_with_ext %> <%= preferred if !u.preferred_is_cell and u.cell_phone? %>
					</span>
				<% end %>
				<% if u.email %>
					<span class="email">
						<span class="contact-label">email:</span>
						<%=mail_to u.email, u.email, :target => '_blank' %>
					</span>
				<% end %>
				<% if u.groups and u.groups.length > 0 %>
					<div class="groups-container">
						<span class="contact-label">groups:</span>
						<ul class="groups">
						<% if u.groups.length > 4 %>
							<% u.groups[0,4].each do |g| %>
							<li><%= link_to g.name, group_type_group_path(g.group_type, g) %></li>
							<% end %>
							<li class="more"><%= link_to "["+(u.groups.length-4).to_s+"&nbsp;more]", u%></li>
						<% else %>
							<% u.groups.each do |g| %>
							<li><%= link_to g.name, group_type_group_path(g.group_type, g) %></li>
							<% end %>
						<% end %>
						</ul>
					</div>
				<% end %>
				<% if u.pending? && can?(:update => u) %>
					<div class="user-admin">
						<% return_path = @users.size > 1 ? "#{users_path}?states_filter=pending" : "#{users_path}?states_filter=approved" %>
						<%= link_to 'Approve User', user_path(u, :user => {:state => :approved}, :return_to => return_path), {:method => :put, :class => 'approve button-link'} %>
					</div>
				<% elsif u.approved? && can?(:update => u) %>
					<div class="user-admin">
						<%= link_to('Re-send Activation Email', user_activation_email_url(u), :confirm => "Re-send an activation email to #{u.full_name}?", :class => :resend) %>
					</div>				
				<% end %>
			</div>
		</li>
	<% end %>
	</ul>
	<div style="clear:both"></div>
	<%= will_paginate @users %>
<% end %>
